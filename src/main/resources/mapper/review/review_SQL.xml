<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="review">
   
   <!-- 마이 페이지에서 리뷰 보여주기 -->   
   <!-- <select id="selectMyReview" resultType="hashmap" parameterType="hashmap">
      
      SELECT 
            *
      FROM 
            REVIEW R 
      JOIN 
            MOIM M ON R.RV_MO_IDX = M.MO_IDX
      JOIN 
            FILE_T F ON R.RV_IDX = F.F_ARTICLE
      WHERE 
            F_TABLE = 'F'
      AND
            R.RV_M_IDX = #{rv_m_idx} 
      AND
            F_MAIN_YN = 'N'
      AND
            F_DEL_YN = 'N'
      AND
            RV_DEL_YN = 'N'
      AND
            R.RV_IDX = #{rv_idx}
      
   </select> -->
   
   <!-- 모임리스트에서 리뷰 보여주기 -->   
   <select id="reviewList" resultType="hashmap" parameterType="hashmap">
      
      SELECT R.*, NVL(F.F_SVNAME,0) AS RF_SVNAME, MO.MO_TITLE, MO.MO_CATEGORY, M.*
        FROM REVIEW R, FILE_T F, MOIM MO, MEMBER M
        WHERE
        F.F_TABLE(+) = 'R'
        AND F.F_MAIN_YN(+) = 'Y'
        AND F.F_ARTICLE(+) = R.RV_IDX
        AND F.F_DEL_YN(+) = 'N'
        AND R.RV_DEL_YN(+) = 'N'
        AND R.MO_IDX = MO.MO_IDX 
        AND M.M_IDX = R.M_IDX
        AND MO.MO_CATEGORY = #{MO_CATEGORY}
      <!-- <if test="mo_region != '전체'">
      AND
            M.MO_REGION = #{mo_region}      
      </if>; -->
      
   </select>
   
   <!-- 후기 전체보기에서 리뷰 보여주기 -->
   <select id="selectAllReview" resultType="hashmap" parameterType="hashmap">
      <include refid="common.pagingPre"/> 
          SELECT R.*, NVL(F.F_SVNAME,0) AS RF_SVNAME, MO.MO_TITLE, M.*
        FROM REVIEW R, FILE_T F, MOIM MO, MEMBER M
        WHERE
        F.F_TABLE(+) = 'R'
        AND F.F_MAIN_YN(+) = 'Y'
        AND F.F_ARTICLE(+) = R.RV_IDX
        AND F.F_DEL_YN(+) = 'N'
        AND R.RV_DEL_YN(+) = 'N'
        AND R.MO_IDX = MO.MO_IDX 
        AND M.M_IDX = R.M_IDX
        AND MO.MO_CATEGORY = #{MO_CATEGORY}
         <if test="mo_region != '전체'">
         AND
            M.MO_REGION = #{mo_region}      
         </if>      
          ORDER BY 
                F.F_REG_DATE DESC
      
      <include refid="common.pagingPost" />
   </select>
   
   <!-- 좋아요 수 -->
	<select id="reviewZzimCount" parameterType="hashmap" resultType="hashmap">
		SELECT COUNT(Z.Z_ARTICLE) AS RZ_COUNT
        FROM ZZIM Z, REVIEW R
        WHERE Z.Z_TABLE = 'R'
        AND Z.Z_ARTICLE = R.RV_IDX
        AND R.RV_IDX = #{RV_IDX}
	</select>
	
	<!-- 좋아요 유무 -->
	<select id="reviewZzimCheck" parameterType="hashmap"
		resultType="hashmap">
         <![CDATA[
      SELECT COUNT(Z_IDX) AS RZ_CHECK
      FROM ZZIM Z, REVIEW R, MEMBER M
      WHERE Z.M_IDX = M.M_IDX
      AND R.RV_IDX = Z.Z_ARTICLE
      AND Z.Z_TABLE = 'R'
      AND R.RV_IDX = #{RV_IDX}
      AND M.M_IDX = #{M_IDX}
            ]]>
	</select>
   
   <!-- 리뷰작성하기 -->
   <insert id="insertReview" parameterType="hashmap">
   
      INSERT INTO 
               REVIEW
      VALUES
      (
         RV_IDX.NEXTVAL,
         #{m_idx}, 
         #{mo_idx},
         #{rv_content},
         sysdate,
         #{rv_title},
         'N',
         #{rv_star}
                  )
   
   </insert>
   
   <!-- 리뷰 사진 파일 등록 -->
   <insert id="insertPhotoReview" parameterType="hashmap">
   
      INSERT INTO 
               FILE_T
      VALUES
      (
         F_IDX.NEXTVAL, 
         'F', 
         #{rv_idx}, 
         #{f_ogname}, 
         #{f_svname}, 
         #{f_size}, 
         'N', 
         'N', 
         sysdate
               )
   
   </insert>
   
   <!-- 리뷰수정하기 -->
   <update id="updateReview" parameterType="hashmap">
   
        UPDATE 
              REVIEW
      SET 
            RV_STAR = #{rv_star},
            RV_TITLE = #{rv_title},
            RV_CONTENT = #{rv_contents},
            RV_REGDATE = sysdate
      WHERE 
            RV_IDX = #{rv_idx}
      AND 
            M_IDX = #{m_idx}
      AND      
            MO_IDX = #{mo_idx}
    
   </update>
   
   <!-- 리뷰삭제하기 -->
   <update id="deleteReview" parameterType="hashmap">
   
       UPDATE 
             REVIEW
      SET 
            RV_DEL_YN = 'Y',
            RV_REGDATE = sysdate
      WHERE 
            RV_IDX = #{rv_idx}
      AND 
            M_IDX = #{m_idx}
      AND      
            MO_IDX = #{mo_idx}
    
   </update>

</mapper>